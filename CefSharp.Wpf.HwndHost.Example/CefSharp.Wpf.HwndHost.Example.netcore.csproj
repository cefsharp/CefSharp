<?xml version="1.0" encoding="utf-8"?>
<Project>
    <!-- Note: We cannot use the recommended style of specifying <Project Sdk=...> because we need
       to set BaseIntermediateOutputPath and BaseOutputPath before the SDK props are imported. -->
    <PropertyGroup>
        <BaseIntermediateOutputPath>obj.netcore\</BaseIntermediateOutputPath>
        <BaseOutputPath>bin.netcore\</BaseOutputPath>
    </PropertyGroup>

    <Import Project="Sdk.props" Sdk="Microsoft.NET.Sdk.WindowsDesktop" />

    <PropertyGroup>
        <OutputType>WinExe</OutputType>
        <TargetFrameworks>netcoreapp3.1;net5.0-windows</TargetFrameworks>
        <TargetFrameworks Condition="'$(VisualStudioVersion)'=='17.0'">$(TargetFrameworks);net6.0-windows</TargetFrameworks>
        <RootNamespace>CefSharp.Wpf.HwndHost.Example</RootNamespace>
        <AssemblyName>CefSharp.Wpf.HwndHost.Example</AssemblyName>
        <UseWPF>true</UseWPF>
        <GenerateAssemblyInfo>false</GenerateAssemblyInfo>
        <ApplicationManifest>app.manifest</ApplicationManifest>
        <CodeAnalysisRuleSet>MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>
        <!-- Builds failing for arm64 on appveyor for some reason-->
        <!--<Platforms>x86;x64;arm64</Platforms>-->
        <Platforms>x86;x64</Platforms>
        <!-- Explicitly set the PlatformTarget for arm64, see: https://github.com/dotnet/sdk/issues/15434 -->
        <PlatformTarget Condition="'$(Platform)' == 'arm64'">arm64</PlatformTarget>
        <StartupObject>CefSharp.Wpf.HwndHost.Example.App</StartupObject>
        <!--
        Run on a newer version of .Net if the specified version (.Net Core 3.1) is not installed
        https://github.com/dotnet/docs/issues/12237
        -->
        <RollForward>Major</RollForward>
        <RuntimeIdentifiers>win-x86;win-x64</RuntimeIdentifiers>
        <RuntimeIdentifier Condition="'$(Platform)' == 'x86'">win-x86</RuntimeIdentifier>
        <RuntimeIdentifier Condition="'$(Platform)' == 'x64'">win-x64</RuntimeIdentifier>
        <RuntimeIdentifier Condition="'$(Platform)' == 'arm64'">win-arm64</RuntimeIdentifier>
        <SelfContained Condition="'$(SelfContained)' == ''">false</SelfContained>
        <LangVersion>9.0</LangVersion>
    </PropertyGroup>

    <ItemGroup>
        <ProjectReference Include="..\CefSharp.Core\CefSharp.Core.netcore.csproj" />
        <ProjectReference Include="..\CefSharp.Wpf\CefSharp.Wpf.netcore.csproj" />
        <ProjectReference Include="..\CefSharp\CefSharp.netcore.csproj" />
        <PackageReference Include="chromiumembeddedframework.runtime" Version="134.3.6" />
        <PackageReference Include="Microsoft.CodeAnalysis.NetAnalyzers" Version="8.0.0">
            <PrivateAssets>all</PrivateAssets>
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
        <PackageReference Include="System.Runtime.InteropServices.WindowsRuntime" Version="4.3.0" />
        <PackageReference Include="MaterialDesignThemes" Version="4.8.0" />
    </ItemGroup>

    <ItemGroup>
        <None Include="crash_reporter.cfg">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </None>
    </ItemGroup>

    <ItemGroup>
        <!-- Don't include items from the "bin" and "obj" folders used by the .NET Framework projects. -->
        <None Remove="bin/**/*.*" />
        <None Remove="obj/**/*.*" />
        <Compile Remove="obj/**/*.*" />
    </ItemGroup>

    <Import Project="$(MSBuildThisFileDirectory)..\CefSharp.AfterBuild.targets" />
    <Import Project="Sdk.targets" Sdk="Microsoft.NET.Sdk.WindowsDesktop" />
</Project>
